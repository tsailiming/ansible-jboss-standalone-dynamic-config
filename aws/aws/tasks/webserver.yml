---
 - name: WebServer | Create WEB Security Group
   local_action:
     module: ec2_group
     name: "{{ item.sg_name }}"
     description: "{{ item.sg_description }}"
     region: "{{ vpc_region }}" # Change the AWS region here
     vpc_id: "{{ vpc.vpc_id }}" # vpc is the resgister name, you can also set it manually
     state: present
     rules: "{{ item.sg_rules }}"
   with_items: "{{ web_security_groups }}"
   register: web_sg

 - name: WebServer | Tag the WEB Security Group with a name
   local_action:
     module: ec2_tag
     resource: "{{ item.group_id}}"
     region: "{{ vpc_region }}"
     state: present
     tags:
       Name: "{{ vpc_name }}-{{ item.item.sg_name }}"
   with_items: "{{ web_sg.results }}"
  
 - name: WebServer | Create the WebServer Instance(s)
   local_action:
     module: ec2
     region: "{{ vpc_region }}"
     group: "{{ web_security_groups[0].sg_name }}"
     keypair: "{{ key_name }}"
     instance_type: "{{ web_instance_type }}"
     image: "{{ ami_id }}"
     vpc_subnet_id: "{{ vpc.subnets[0].id }}"
     assign_public_ip: True
     wait: True
     wait_timeout: 600
     count: "{{ web_instance_count }}"
     instance_tags:
       Name: "{{ vpc_name }}_WEB_Instance"
       Role: "{{ server_role }}"
       Application: "{{ application }}"
   register: web

 - name: Instance Ids
   debug: msg={{ item.id }}
   with_items: "{{ web.instances }}"

 - name: WebServer | Wait for SSH to come up
   local_action: 
     module: wait_for 
     host: "{{ item.public_ip }}" 
     port: 22
     delay: 60
     timeout: 320
     state: started
   with_items: 
     - "{{ web.instances }}"

